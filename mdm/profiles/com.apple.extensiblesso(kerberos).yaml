title: Extensible Single Sign-On (Kerberos)
description: Configures an app extension to handle Kerberos SSO.
payload:
  payloadtype: com.apple.extensiblesso
  supportedOS:
    iOS:
      introduced: '13.0'
      multiple: true
      supervised: false
      allowmanualinstall: false
      sharedipad:
        mode: allowed
        devicechannel: false
        userchannel: true
      userenrollment:
        mode: allowed
    macOS:
      introduced: '10.15'
      multiple: true
      devicechannel: true
      userchannel: true
      supervised: false
      requiresdep: false
      userapprovedmdm: true
      allowmanualinstall: false
      userenrollment:
        mode: allowed
    tvOS:
      introduced: n/a
    visionOS:
      introduced: '1.1'
      multiple: true
      supervised: false
      allowmanualinstall: false
      userenrollment:
        mode: allowed
    watchOS:
      introduced: n/a
  content: Configures the included Kerberos extension that performs SSO on behalf
    of specified hosts. User channel support was added in macOS 11.0.
payloadkeys:
- key: ExtensionIdentifier
  type: <string>
  presence: required
  rangelist:
  - com.apple.AppSSOKerberos.KerberosExtension
  content: Set this to 'com.apple.AppSSOKerberos.KerberosExtension' for this extension.
- key: TeamIdentifier
  type: <string>
  presence: required
  rangelist:
  - apple
  content: Set this to 'apple' for this extension.
- key: Type
  type: <string>
  presence: required
  rangelist:
  - Credential
  content: Set this to 'Credential' for this extension.
- key: Realm
  type: <string>
  presence: required
  content: The Kerberos realm. Use proper capitalization for this value. If in an
    Active Directory forest, this is the realm where the user logs in.
- key: ExtensionData
  type: <dictionary>
  presence: optional
  content: This is the dictionary used by the Apple built-in Kerberos extension.
  subkeys:
  - key: cacheName
    supportedOS:
      iOS:
        deprecated: '15.0'
      macOS:
        deprecated: '12.0'
    type: <string>
    presence: optional
    content: The GSS name of the Kerberos cache to use. Rarely set by an administrator.
  - key: principalName
    type: <string>
    presence: optional
    content: The principal (username) to use. You don't need to include the realm.
  - key: siteCode
    type: <string>
    presence: optional
    content: The name of the Active Directory site the Kerberos extension should use.
      Most administrators don't need to modify this value, as the Kerberos extension
      can normally find the site automatically.
  - key: certificateUUID
    type: <string>
    presence: optional
    content: The PayloadUUID of a PKINIT certificate.
  - key: useSiteAutoDiscovery
    type: <boolean>
    presence: optional
    default: true
    content: If 'false', the Kerberos extension doesn't automatically use LDAP and
      DNS to determine its AD site name.
  - key: credentialBundleIdACL
    type: <array>
    presence: optional
    content: A list of bundle IDs allowed to access the ticket-granting ticket (TGT).
    subkeys:
    - key: credentialBundleIdACLItem
      type: <string>
      presence: optional
      content: Bundle IDs allowed to access the TGT. These values are case sensitive.
  - key: includeManagedAppsInBundleIdACL
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '12.0'
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the Kerberos extension allows only managed apps to access
      and use the credential. This is in addition to the 'credentialBundleIDACL',
      if you specify that value. Available in iOS 14 and later, and macOS 12 and later.
  - key: includeKerberosAppsInBundleIdACL
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '12.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the Kerberos extension allows the standard Kerberos utilities
      including 'TicketViewer' and 'klist' to access and use the credential. This
      is in addition to 'includeManagedAppsInBundleIdACL' or the 'credentialBundleIdACL',
      if you specify those values. Available in macOS 12 and later.
  - key: domainRealmMapping
    type: <dictionary>
    presence: optional
    content: A custom domain-realm mapping for Kerberos. The system uses this when
      the DNS name of hosts doesn't match the realm name. Most administrators don't
      need to customize this.
    subkeys:
    - key: Realm
      type: <array>
      presence: optional
      content: The key should be the name of the realm, and the value is an array
        of DNS suffixes that map to the realm.
      subkeys:
      - key: RealmItem
        type: <string>
        presence: optional
        content: Domains to map to the realm
  - key: isDefaultRealm
    type: <boolean>
    presence: optional
    default: false
    content: Specifies whether this is the default realm if there's more than one
      Kerberos extension configuration.
  - key: customUsernameLabel
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <string>
    presence: optional
    content: The custom user name label used in the Kerberos extension instead of
      “Username,” such as “Company ID”. Available in macOS 11 and later.
  - key: helpText
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <string>
    presence: optional
    content: The text to display to the user at the bottom of the Kerberos login window.
      You can also use this to display help information or disclaimer text. Available
      in iOS 14 and later, and macOS 11 and later.
  - key: allowPasswordChange
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: true
    content: If 'false', the system disables password changes. Available in macOS
      10.15 and later.
  - key: allowAutomaticLogin
    type: <boolean>
    presence: optional
    default: true
    content: If 'false', the system doesn't allow saving passwords in the keychain.
  - key: requireUserPresence
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the system requires the user to provide Touch ID, Face ID
      or their passcode to access the keychain entry.
  - key: pwExpireOverride
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        deprecated: '12.0'
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    content: The number of days that the system allows using passwords on this domain.
      For most domains, this calculation is automatic. Available in macOS 10.15 and
      later.
  - key: pwNotificationDays
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    default: 15
    content: The number of days prior to password expiration when the system sends
      a notification of password expiration to the user. Available in macOS 10.15
      and later.
  - key: pwReqLength
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    content: The minimum length of passwords on the domain.Available in macOS 10.15
      and later.
  - key: pwReqComplexity
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the system requires passwords to meet Active Directory's definition
      of “complex”. Available in macOS 10.15 and later.
  - key: pwReqMinAge
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    content: The minimum age of passwords before the system allows changing them on
      this domain. Available in macOS 10.15 and later.
  - key: pwReqHistory
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    content: The number of prior passwords that the system disallows reuse on this
      domain. Available in macOS 10.15 and later.
  - key: pwReqText
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <string>
    presence: optional
    content: The text version of the domain's password requirements. Only for use
      if 'pwReqComplexity' or 'pwReqLength' aren't specified. Available in macOS 10.15
      and later.
  - key: pwReqRTFData
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '15.0'
      visionOS:
        introduced: n/a
    type: <data>
    presence: optional
    content: The RTF file formatted version of the domain's password requirements.
      Only for use if 'pwReqComplexity' or 'pwReqLength' aren't specified. Available
      in macOS 15 and later.
  - key: pwChangeURL
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <string>
    presence: optional
    content: This URL will launch in the user's default web browser when they initiate
      a password change. Available in macOS 10.15 and later.
  - key: syncLocalPassword
    supportedOS:
      iOS:
        introduced: n/a
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'false', the system disables password sync. Note that this will not
      work if the user is logged in with a mobile account. Available in macOS 10.15
      and later.
  - key: replicationTime
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
        deprecated: '12.0'
      visionOS:
        introduced: n/a
    type: <integer>
    presence: optional
    default: 900
    content: The time, in seconds, required to replicate changes in the Active Directory
      domain. The Kerberos extension uses this when checking password age after a
      change. Available in macOS 11 and later.
  - key: delayUserSetup
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the system doesn't prompt the user to setup the Kerberos extension
      until either the administrator enables it with the 'app-sso' tool or the system
      receives a Kerberos challenge. Available in macOS 11 and later.
  - key: monitorCredentialsCache
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: true
    content: If 'false', the system requests the credential on the next matching Kerberos
      challenge or network state change. If the credential is expired or missing,
      the system creates a new one. Available in macOS 11 and later.
  - key: requireTLSForLDAP
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <boolean>
    presence: optional
    default: false
    content: Require that LDAP connections use TLS. Available in macOS 11 and later.
  - key: credentialUseMode
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <string>
    presence: optional
    rangelist:
    - always
    - whenNotSpecified
    - kerberosDefault
    default: always
    content: |-
      This setting affects how other processes use the Kerberos Extension credential. Allowed values:

      * 'always': The system always uses the credential if the SPN matches the Kerberos Extension 'Hosts' array and the caller hasn't specified another credential. However, the system won't use the credential if the calling app isn't in the 'credentialBundleIDACL'.
      * 'whenNotSpecified': The system only uses the extension credential if the SPN matches the Kerberos Extension 'Hosts' array. However, the system won't use the credential if the calling app isn't in the 'credentialBundleIDACL'.
      * 'kerberosDefault': The system uses the default Kerberos processes to select credentials, and normally uses the default Kerberos credential. This is the same as turning off this capability.

      Available in macOS 11 and later.
  - key: preferredKDCs
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: '12.0'
    type: <array>
    presence: optional
    content: |-
      The ordered list of preferred Key Distribution Centers (KDCs) to use for Kerberos traffic. Use this if the servers aren't discoverable through DNS. If the servers are specified, then the system uses them for both connectivity checks and attempts to use them first for Kerberos traffic. If the servers don't respond, the device falls back to DNS discovery. Format each entry the same as it would be in a 'krb5.conf' file, for example:
      * 'adserver1.example.com'
      * 'tcp/adserver1.example.com:88'
      * 'kkdcp://kerberosproxy.example.com:443/kkdcp'
    subkeys:
    - key: preferredKDC
      type: <string>
      presence: required
      content: A host or domain name in the format of [protocol/]hostname[:port][/path]
  - key: usePlatformSSOTGT
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '13.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the system requires this configuration uses a TGT from Platform
      SSO instead of requesting a new one. Available in macOS 13 and later.
  - key: allowPlatformSSOAuthFallback
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '13.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: true
    content: If 'true' and 'usePlatformSSOTGT' is 'true', the system allows the user
      to manually sign in. Available in macOS 13 and later.
  - key: performKerberosOnly
    supportedOS:
      iOS:
        introduced: '16.0'
      macOS:
        introduced: '13.0'
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the Kerberos Extension handles Kerberos requests only. It
      doesn't check for password expiration, show the password expiration in the menu,
      check for external password changes, perform password sync, or retrieve the
      home directory. Available in macOS 13 and later.
  - key: identityIssuerAutoSelectFilter
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '15.0'
      visionOS:
        introduced: n/a
    type: <string>
    presence: optional
    content: A string with wildcards that can use used to filter the list of available
      SmartCards by issuer. e.g “*My CA2*”. If there is one remaining, it will be
      auto-selected. If there more than one remaining, then the list is shorter. Available
      in macOS 15 and later.
  - key: allowSmartCard
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '15.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: true
    content: If 'true', allow the user to switch the user interface to SmartCard mode.
      Available in macOS 15 and later.
  - key: allowPassword
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '15.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: true
    content: If 'true', allow the user to switch the user interface to Password mode.
      Available in macOS 15 and later.
  - key: startInSmartCardMode
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '15.0'
      visionOS:
        introduced: n/a
    type: <boolean>
    presence: optional
    default: false
    content: If 'true', the user interface will start in SmartCard mode. Available
      in macOS 15 and later.
- key: Hosts
  type: <array>
  presence: optional
  content: |-
    One or more host or domain names for which the app extension performs SSO.
    The system:
    * Matches host or domain names case-insensitively
    * Requires that all the host and domain names of all installed Extensible SSO payloads are unique
    Host names that begin with a “.” are wildcard suffixes that match all subdomains; otherwise the host name needs be an exact match.
  subkeys:
  - key: hostname
    type: <string>
    presence: required
    content: A host or domain name. Values that begin with a "." will be used as domain
      names.
